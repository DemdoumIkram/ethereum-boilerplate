{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x522B53BB5F2DE533E17ACD19a1e6306Ef4a16550",
      "txHash": "0x73089b3461376d2db0e06be6f5c717455da727a26129974e9120ac3b3eab6a9c",
      "kind": "uups"
    },
    {
      "address": "0xe692F4D40652d0414e7606cF27f07253B4754a5B",
      "txHash": "0x459876993742c5f614ee2633e68635d2bae1aca1c127f2cf47601ec2af44bcc3",
      "kind": "uups"
    },
    {
      "address": "0x83bFa29875b93850B739D0217224f96B0aa8c038",
      "txHash": "0x6a9ea5a41cb247cc9a8e98b377079ea78d3546735954ee32b34f6bd446408f76",
      "kind": "uups"
    },
    {
      "address": "0x5516A1e21efaC9647b9ffa050EB018E48cfA579d",
      "txHash": "0x48a8d7c142d8b668bd5487dcc70ffd9efc7a229896cb09559c6b52e738f6c727",
      "kind": "uups"
    },
    {
      "address": "0xeec918d74c746167564401103096D45BbD494B74",
      "txHash": "0x75fbdd6d68cc2b73176fdf9b2d5d788397878e69e77df49c8ab2ebe6f0ce5ad0",
      "kind": "uups"
    },
    {
      "address": "0x8f0483125FCb9aaAEFA9209D8E9d7b9C8B9Fb90F",
      "txHash": "0x0c63d3fe82a47666ef60ceab6bd8203e815514fd2357fc20ab51217c3bb1090c",
      "kind": "uups"
    },
    {
      "address": "0x2C2B9C9a4a25e24B174f26114e8926a9f2128FE4",
      "txHash": "0xa6d931c48169a1cf1846edd4ffd8e5c62896d8481b8d6727abf4c888d38522f5",
      "kind": "uups"
    },
    {
      "address": "0x30753E4A8aad7F8597332E813735Def5dD395028",
      "txHash": "0x92402ac89cc9a9c60cbbdefaf3c9e8342039d4fbe01309662ddf83d542e3d476",
      "kind": "uups"
    },
    {
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "txHash": "0x67d4a9ca203ffdd58766a18fe676f1f42bb4bb9166c3b9f7da70aa0f5309f1ac",
      "kind": "uups"
    },
    {
      "address": "0xFB88dE099e13c3ED21F80a7a1E49f8CAEcF10df6",
      "txHash": "0xa21f1b2a2fb3eae9bf88fa3cea21efd0e5719d04cf929f746a7719f0c69e21aa",
      "kind": "uups"
    },
    {
      "address": "0x9FBDa871d559710256a2502A2517b794B482Db40",
      "txHash": "0xa456bdac76caa8b2d568611e06145792bb6e4f6b2a45b2994ee07e037ab8ae09",
      "kind": "uups"
    },
    {
      "address": "0xf204a4Ef082f5c04bB89F7D5E6568B796096735a",
      "txHash": "0x27c8c6b5c5b8f8e25fb943297378eb6f6a662d9ede7cd56c95222f4baf9e6556",
      "kind": "uups"
    }
  ],
  "impls": {
    "dfbf8f264c61bfdd9cf0204eb82e2cc6099e43b2df7f4b9e095284e3dd50def3": {
      "address": "0x8f0483125FCb9aaAEFA9209D8E9d7b9C8B9Fb90F",
      "txHash": "0x9ecf4a273afa167b61c2f3aca6f128f380142a58c93303e3df24343498e802e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "645fad6ef4eaa980ca16253e5a880f399f5f55c03344f34714e824867386e861": {
      "address": "0x75c35C980C0d37ef46DF04d31A140b65503c0eEd",
      "txHash": "0xce03266faa90268c4d123a9dd52c666abc01327074a801ce24166d4f382277e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "NFTMinterUpgradeableV1",
            "label": "nftToken",
            "type": "t_contract(IERC1155CustomUpgradeable)2757",
            "src": "../project:/contracts/NFTMinterUpgradeable/NFTMinterUpgradeableV1.sol:16"
          }
        ],
        "types": {
          "t_contract(IERC1155CustomUpgradeable)2757": {
            "label": "contract IERC1155CustomUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "879e52e3d622965e00a8adadcdf90d49e9965022169de74c31a3cf49a0d9d37c": {
      "address": "0x9FBDa871d559710256a2502A2517b794B482Db40",
      "txHash": "0xe99500529b4293cb899dae9ab11a63588db181c0810da2ac4502b175727908d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9794421fbe2a6f221ddc7053aa3e3bb1c21d435a5087c9f1ebb50e538617cdd8": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0xd042cd7cf19b0fafd2c70c0678ee4671977387edd1e64c91e74ad5e055034127",
      "layout": {
        "storage": [
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3426_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "SecondContract",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:112"
          },
          {
            "contract": "SecondContract",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:113"
          },
          {
            "contract": "SecondContract",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:114"
          },
          {
            "contract": "SecondContract",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:115"
          },
          {
            "contract": "SecondContract",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:116"
          },
          {
            "contract": "SecondContract",
            "label": "paused",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:117"
          },
          {
            "contract": "SecondContract",
            "label": "revealed",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:118"
          },
          {
            "contract": "SecondContract",
            "label": "notRevealedUri",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:119"
          },
          {
            "contract": "SecondContract",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:120"
          },
          {
            "contract": "SecondContract",
            "label": "nftPerAddressLimit",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:122"
          },
          {
            "contract": "SecondContract",
            "label": "onlyWhitelisted",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:123"
          },
          {
            "contract": "SecondContract",
            "label": "whitelistedAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:124"
          },
          {
            "contract": "SecondContract",
            "label": "addressMintedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:125"
          },
          {
            "contract": "SecondContract",
            "label": "tokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContract.sol:127"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3426_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)3426_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)3426_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          }
        }
      }
    },
    "b26e97db6c0c5392d9a9661a6bc49ea52040aa2bd2c4877e86fd3fcf8cdb02f0": {
      "address": "0xFB88dE099e13c3ED21F80a7a1E49f8CAEcF10df6",
      "txHash": "0xa25e4cdb9c4b665f863f29ffb2e264b617824661fe301bddf5cbce1bf3d5f592",
      "layout": {
        "storage": [
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3426_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "SecondContractV2",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:112"
          },
          {
            "contract": "SecondContractV2",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:113"
          },
          {
            "contract": "SecondContractV2",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:114"
          },
          {
            "contract": "SecondContractV2",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:115"
          },
          {
            "contract": "SecondContractV2",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:116"
          },
          {
            "contract": "SecondContractV2",
            "label": "paused",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:117"
          },
          {
            "contract": "SecondContractV2",
            "label": "revealed",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:118"
          },
          {
            "contract": "SecondContractV2",
            "label": "notRevealedUri",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:119"
          },
          {
            "contract": "SecondContractV2",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:120"
          },
          {
            "contract": "SecondContractV2",
            "label": "nftPerAddressLimit",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:122"
          },
          {
            "contract": "SecondContractV2",
            "label": "onlyWhitelisted",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:123"
          },
          {
            "contract": "SecondContractV2",
            "label": "whitelistedAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:124"
          },
          {
            "contract": "SecondContractV2",
            "label": "addressMintedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:125"
          },
          {
            "contract": "SecondContractV2",
            "label": "tokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\project:\\contracts\\ERC1155CustomUpgradeable\\SecondContractV2.sol:127"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3426_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)3426_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)3426_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          }
        }
      }
    }
  }
}
